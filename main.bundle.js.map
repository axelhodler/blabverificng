{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/reports/report.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/members/list/listmembers.component.html","webpack:///./src/app/reports/list/listreports.component.html","webpack:///./src/app/reports/submit/submitreport.component.html","webpack:///./src/app/reports/verify/verifyreport.component.html","webpack:///./src/app/boundaries/contract.ts","webpack:///./src/app/boundaries/ethereumgateway.ts","webpack:///./src/app/boundaries/hashing.ts","webpack:///./src/app/boundaries/reportsgateway.ts","webpack:///./src/app/boundaries/membersgateway.ts","webpack:///./src/app/members/list/listmembers.component.ts","webpack:///./src/app/reports/list/listreports.component.ts","webpack:///./src/app/reports/submit/submitreport.component.ts","webpack:///./src/app/reports/verify/verifyreport.component.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 108;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 108\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Routes, RouterModule} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {ListReportsComponent} from \"./reports/list/listreports.component\";\nimport {SubmitReportComponent} from \"./reports/submit/submitreport.component\";\nimport {VerifyReport} from \"./reports/verify/verifyreport.component\";\nimport {ListMembersComponent} from \"./members/list/listmembers.component\";\n\nconst routes: Routes = [\n  { path: 'reports', component: ListReportsComponent},\n  { path: 'reports/new', component: SubmitReportComponent},\n  { path: 'reports/verify', component: VerifyReport},\n  { path: 'members', component: ListMembersComponent}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import {Component} from '@angular/core';\nimport {EthereumGateway} from './boundaries/ethereumgateway';\n\n@Component({\n  moduleId: module.id,\n  selector: 'blab-verification',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  error: string;\n  constructor(private ethereumGateway: EthereumGateway) {\n    try {\n      ethereumGateway.connectToContract();\n    } catch (e) {\n      this.error = 'Could not connect to ethereum chain. Please Install MetaMask';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {FormsModule} from \"@angular/forms\";\nimport {SubmitReportComponent} from \"./reports/submit/submitreport.component\";\nimport {VerifyReport} from \"./reports/verify/verifyreport.component\";\nimport {EthereumGateway} from \"./boundaries/ethereumgateway\";\nimport {AppComponent} from \"./app.component\";\nimport {ReportsGateway} from \"./boundaries/reportsgateway\";\nimport {ListReportsComponent} from \"./reports/list/listreports.component\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {HttpModule} from \"@angular/http\";\nimport {InMemoryWebApiModule} from \"angular-in-memory-web-api\";\nimport {InMemoryDataService} from \"./in-memory-data.service\";\nimport {Contract} from \"./boundaries/contract\";\nimport {MaterialModule} from \"@angular/material\";\nimport {Hashing} from \"./boundaries/hashing\";\nimport {ListMembersComponent} from \"./members/list/listmembers.component\";\nimport {MembersGateway} from \"./boundaries/membersgateway\";\nimport {NoopAnimationsModule} from \"@angular/platform-browser/animations\";\nimport 'hammerjs';\n\n@NgModule({\n  imports: [\n    MaterialModule,\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    InMemoryWebApiModule.forRoot(InMemoryDataService),\n    AppRoutingModule,\n    NoopAnimationsModule\n  ],\n  declarations: [AppComponent, SubmitReportComponent, VerifyReport, ListReportsComponent, ListMembersComponent],\n  bootstrap: [AppComponent],\n  providers: [EthereumGateway, Contract, ReportsGateway, MembersGateway, Hashing]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {InMemoryDbService} from \"angular-in-memory-web-api\";\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    let reports = [{\n      id: 'hashedreport',\n      content: 'report contents',\n      submitter: 'Sally the Submitter',\n      verifierCount: 3\n    }, {\n      id: 'reporthash',\n      content: 'report content',\n      submitter: 'Sven the Submitter',\n      verifierCount: 2\n    }];\n    let members = [{\n      id: '0x38588822bea476d5e1d56cfc9ce9781fe5262196',\n      name: 'Alice'\n    }, {\n      id: '0xdf700fd0413ca5772cbf5a588d3080469f2edda2',\n      name: 'Bob'\n    }, {\n      id: '0x354990de9386772900c6b257ec0b8dcc5af8bfba',\n      name: 'Carol'\n    }, {\n      id: '0xa091b68b607622a281d7d0864217ea348957b574',\n      name: 'Dave'\n    }];\n    return {members, reports};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/in-memory-data.service.ts","export class Report {\n  id: string;\n  content: string;\n  compensation: number;\n  submitter: string;\n  verifierCount: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/report.ts","module.exports = \"<md-toolbar routerLink=\\\"/\\\"\\n            style=\\\"cursor: pointer;\\\">\\n  blockLAB Verify\\n</md-toolbar>\\n\\n<button md-raised-button\\n        id=\\\"navbar-to-submit-report\\\"\\n        routerLink=\\\"/reports/new\\\">Submit Report\\n</button>\\n\\n<button md-raised-button\\n        id=\\\"navbar-to-reports\\\"\\n        routerLink=\\\"/reports\\\">Reports\\n</button>\\n\\n<button md-raised-button\\n        id=\\\"navbar-verify-report\\\"\\n        routerLink=\\\"/reports/verify\\\">Verify Report\\n</button>\\n\\n<button md-raised-button\\n        id=\\\"navbar-to-members\\\"\\n        routerLink=\\\"/members\\\">List Members\\n</button>\\n\\n<div id=\\\"error\\\">{{ error }}</div>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 182\n// module chunks = 1","module.exports = \"<md-list id=\\\"members-list\\\">\\n  <md-list-item *ngFor=\\\"let member of members\\\">\\n    <h3 md-line> {{ member.name }} </h3>\\n    <p md-line> {{ member.id }} </p>\\n  </md-list-item>\\n</md-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/members/list/listmembers.component.html\n// module id = 183\n// module chunks = 1","module.exports = \"<md-list id=\\\"reports-list\\\">\\n  <md-list-item *ngFor=\\\"let report of reports\\\">\\n    <h3 md-line> {{ report.content }} </h3>\\n    <i md-line> {{ report.id }} </i>\\n    <p md-line class=\\\"membername\\\"> {{ report.submitter }} </p>\\n    <p md-line> Verifiercount: {{ report.verifierCount }} </p>\\n    <button md-mini-fab>\\n      <md-icon>check</md-icon>\\n    </button>\\n  </md-list-item>\\n</md-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/list/listreports.component.html\n// module id = 184\n// module chunks = 1","module.exports = \"<p></p>\\n\\n<md-input-container class=\\\"full-width\\\">\\n  <input id=\\\"report-content\\\"\\n         mdInput\\n         placeholder=\\\"Describe what you have achieved\\\"\\n         [(ngModel)]=\\\"report.content\\\"\\n         (ngModelChange)=\\\"updateReportHash()\\\">\\n</md-input-container>\\n\\n<md-input-container class=\\\"full-width\\\">\\n  <input id=\\\"report-compensation\\\"\\n         mdInput\\n         type=\\\"number\\\"\\n         [(ngModel)]=\\\"report.compensation\\\"\\n         placeholder=\\\"What compensation do you expect. e.g. 200\\\">\\n</md-input-container>\\n\\n<p id=\\\"report-hashed\\\"\\n   style=\\\"float: left;\\\"\\n   [hidden]=\\\"!reportHash\\\">\\n  Your report has the unique hash of <i>{{reportHash}}</i> and will be stored as such\\n</p>\\n\\n<button md-raised-button\\n        class=\\\"pull-right\\\"\\n        color=\\\"primary\\\"\\n        id=\\\"submit-report\\\"\\n        [disabled]=\\\"!report.content\\\"\\n        (click)=\\\"submitReport()\\\">\\n  Submit Report\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/submit/submitreport.component.html\n// module id = 185\n// module chunks = 1","module.exports = \"<p></p>\\n\\n<md-input-container class=\\\"full-width\\\">\\n  <input id=\\\"report-id\\\"\\n         mdInput\\n         placeholder=\\\"Hash of the report\\\"\\n         (keyup)=\\\"isReportValid()\\\"\\n         [(ngModel)]=\\\"reportId\\\">\\n</md-input-container>\\n\\n<button md-raised-button\\n        class=\\\"pull-right\\\"\\n        color=\\\"primary\\\"\\n        id=\\\"verify-report\\\"\\n        [disabled]=\\\"!reportId\\\"\\n        (click)=\\\"verifyReport()\\\">\\n  Verify Report\\n</button>\\n\\n<div id=\\\"is-report-valid\\\">\\n  {{ isReportValidText }}\\n</div>\\n\\n<p [hidden]=\\\"!reportVerifiers\\\"> The following users have verified the report:</p>\\n<md-list id=\\\"report-verifiers\\\">\\n  <md-list-item *ngFor=\\\"let verifier of reportVerifiers\\\">\\n    {{ verifier }}\\n  </md-list-item>\\n</md-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/verify/verifyreport.component.html\n// module id = 186\n// module chunks = 1","import {Injectable} from \"@angular/core\";\nimport {EthereumGateway} from \"./ethereumgateway\";\n\n@Injectable()\nexport class Contract {\n  constructor(private ethereumGateway: EthereumGateway) {\n  }\n\n  submitReport(hash: string, compensation: number) {\n    return this.submit(hash, compensation);\n  }\n\n  verifyReport(hash: string) {\n    return this.verify(hash);\n  }\n\n  isReportValid(hash: string) {\n    return new Promise((resolve) => {\n      this.ethereumGateway.contract.isValid\n        .call(hash, (err: any, data: number) => resolve(data));\n    })\n  }\n\n  fetchVerifiers(hash: string) {\n    return new Promise((resolve) => {\n      this.ethereumGateway.contract.verifiersFor\n        .call(hash, (err: any, data: Array<string>) => resolve(data));\n    })\n  }\n\n  private submit(hash: string, compensation: number) {\n    return new Promise((resolve) => {\n      this.ethereumGateway.contract.submit(hash, compensation, {\n        from: this.ethereumGateway.currentUserAddress()\n      }, () => resolve())\n    })\n  }\n\n  private verify(hash: string) {\n    return new Promise((resolve) => {\n      this.ethereumGateway.contract.verify(hash, {\n        from: this.ethereumGateway.currentUserAddress()\n      }, () => resolve())\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boundaries/contract.ts","import {Injectable} from \"@angular/core\";\nimport { environment } from '../../environments/environment';\ndeclare var web3: any;\n\n@Injectable()\nexport class EthereumGateway {\n  contract: any;\n\n  connectToContract() {\n    this.contract = web3.eth.contract(JSON.parse(environment.CONTRACT_ABI)).at(environment.CONTRACT_ADDRESS);\n  }\n\n  currentUserAddress() {\n    return web3.eth.coinbase;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boundaries/ethereumgateway.ts","declare var Web3: any;\n\nexport class Hashing {\n  sha3(toHash: string) {\n    var web3 = new Web3();\n    return web3.sha3(toHash);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boundaries/hashing.ts","import {Injectable} from \"@angular/core\";\nimport {Report} from \"../reports/report\";\nimport {Http, Headers} from \"@angular/http\";\nimport 'rxjs/add/operator/toPromise';\nimport {Hashing} from \"./hashing\";\n\n@Injectable()\nexport class ReportsGateway {\n  readonly REPORTS_URL = 'toBeDefined/reports';  // URL to web api\n  readonly HEADERS = new Headers({'Content-Type': 'application/json'});\n\n  constructor(private http: Http, private hashing: Hashing) {\n  }\n\n  saveReport(content: string, compensation: number): Promise<Report> {\n    return this.http.post(this.REPORTS_URL, JSON.stringify({\n      id: this.hashing.sha3(content),\n      content: content,\n      compensation: compensation,\n      submitter: 'Carol the current user',\n      verifierCount: 0\n    }), {headers: this.HEADERS})\n      .toPromise()\n      .then(response => response.json().data);\n  }\n\n  reports(): Promise<Report[]> {\n    return this.http.get(this.REPORTS_URL)\n      .toPromise()\n      .then((response) => response.json().data as Report[]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boundaries/reportsgateway.ts","import {Injectable} from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport 'rxjs/add/operator/toPromise';\nimport {Member} from \"../members/member\";\n\n@Injectable()\nexport class MembersGateway {\n  readonly MEMBERS_URL = 'toBeDefined/members';  // URL to web api\n\n  constructor(private http: Http) {\n  }\n\n  members(): Promise<Member[]> {\n    return this.http.get(this.MEMBERS_URL)\n      .toPromise()\n      .then((response) => response.json().data as Member[]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boundaries/membersgateway.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Member} from \"../member\";\nimport {MembersGateway} from \"../../boundaries/membersgateway\";\n\n@Component({\n  moduleId: module.id,\n  templateUrl: 'listmembers.component.html'\n})\nexport class ListMembersComponent implements OnInit {\n  members: Member[];\n\n  constructor(private membersGateway: MembersGateway) {\n  }\n\n  ngOnInit(): void {\n    this.membersGateway.members().then(members => {\n      this.members = members;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/members/list/listmembers.component.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Report} from \"../report\";\nimport {ReportsGateway} from \"../../boundaries/reportsgateway\";\n\n@Component({\n  moduleId: module.id,\n  templateUrl: 'listreports.component.html'\n})\nexport class ListReportsComponent implements OnInit {\n  reports: Report[];\n\n  constructor(private reportsGateway: ReportsGateway) {\n  }\n\n  ngOnInit(): void {\n    this.reportsGateway.reports().then(reports => {\n      this.reports = reports\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/list/listreports.component.ts","import {Component, Input} from \"@angular/core\";\nimport {Hashing} from \"../../boundaries/hashing\";\nimport {Contract} from \"../../boundaries/contract\";\nimport {ReportsGateway} from \"../../boundaries/reportsgateway\";\nimport {Router} from \"@angular/router\";\nimport {Report} from \"../report\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'submit-report',\n  templateUrl: 'submitreport.component.html'\n})\nexport class SubmitReportComponent {\n  @Input()\n  report: Report;\n\n  reportHash: string;\n\n  hashing: Hashing;\n\n  constructor(private router: Router, private contract: Contract, private reportsGateway: ReportsGateway) {\n    this.hashing = new Hashing();\n    this.report = new Report();\n  }\n\n  updateReportHash() {\n    this.reportHash = this.hashing.sha3(this.report.content);\n  }\n\n  submitReport() {\n    return this.contract.submitReport(this.reportHash, this.report.compensation).then(() => {\n      return this.reportsGateway.saveReport(this.report.content, this.report.compensation).then(() => {\n        return this.router.navigate(['reports']);\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/submit/submitreport.component.ts","import {Component, Input} from \"@angular/core\";\nimport {Contract} from \"../../boundaries/contract\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'verify-report',\n  templateUrl: 'verifyreport.component.html'\n})\nexport class VerifyReport {\n\n  @Input()\n  reportId: string;\n  isReportValidText: string;\n  reportVerifiers: Array<string>;\n\n  constructor(private contract: Contract) {\n  }\n\n  verifyReport() {\n    this.contract.verifyReport(this.reportId).then(() => {\n      this.contract.fetchVerifiers(this.reportId).then((verifiers: Array<string>) => {\n        this.reportVerifiers = verifiers;\n      })\n    });\n  }\n\n  isReportValid() {\n    this.contract.isReportValid(this.reportId).then(isValid => {\n      if (isValid) {\n        this.isReportValidText = 'is valid!';\n      } else {\n        this.isReportValidText = 'The report you are searching for is not yet valid!';\n      }\n    });\n    this.contract.fetchVerifiers(this.reportId).then((verifiers: Array<string>) => {\n      this.reportVerifiers = verifiers;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/verify/verifyreport.component.ts","export const environment = {\n  production: true,\n  CONTRACT_ADDRESS: '0x7C4F731A6fFBdb694585FebA7821Bb8f0966ca32',\n  CONTRACT_ABI: '[{\"constant\":true,\"inputs\":[{\"name\":\"reportId\",\"type\":\"string\"}],\"name\":\"verifiersFor\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"membership\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reportId\",\"type\":\"string\"}],\"name\":\"verify\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reportId\",\"type\":\"string\"},{\"name\":\"compensation\",\"type\":\"uint256\"}],\"name\":\"submit\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"reportId\",\"type\":\"string\"}],\"name\":\"submitterFor\",\"outputs\":[{\"name\":\"submitter\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"reportId\",\"type\":\"string\"}],\"name\":\"isValid\",\"outputs\":[{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"membershipManager\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"}]'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}